ch4cycle
  Arrays
    e_globalCH4emissions=Parameter(index=[time],unit="Mtonne/year") - Done - From ch4emissions
    rtl_g0_baselandtemp=Parameter(index=[1],unit="degreeC") - From ClimateTemperature
    rtl_g_landtemperature=Parameter(index=[time],unit="degreeC") - From ClimateTemperature
  Scalars
    pic_preindustconcCH4=Parameter(unit="ppbv") - Done
    c0_CH4concbaseyr=Parameter(unit="ppbv") - Done
    air_CH4fractioninatm=Parameter(unit="%") - Done
    res_CH4atmlifetime=Parameter(unit="year") - Done
    den_CH4density=Parameter(unit="Mtonne/ppbv") - Done
    stim_CH4emissionfeedback=Parameter(unit="Mtonne/degreeC") - Done

ch4emissions
  Arrays
    e0_baselineCH4emissions=Parameter(index=[region],unit="Mtonne/year") - Done
    er_CH4emissionsgrowth=Parameter(index=[time,region],unit="%") - Done

ch4forcing
  Arrays
    c_N2Oconcentration=Parameter(index=[time],unit="ppbv") - From n2ocycle
    c_CH4concentration=Parameter(index=[time],unit="ppbv") - From ch4cycle
  Scalars
    f0_CH4baseforcing=Parameter(unit="W/m2") - Done
    fslope_CH4forcingslope=Parameter(unit="W/m2") - Done
    c0_baseN2Oconc=Parameter(unit="ppbv") - Done
    c0_baseCH4conc=Parameter(unit="ppbv") - Done

ClimateTemperature
  Arrays
    ft_totalforcing = Parameter(index=[time], unit="W/m2") - From TotalForcing
    fs_sulfateforcing = Parameter(index=[time, region], unit="W/m2") - From SulphateForcing
    lat_latitude = Parameter(index=[region], unit="degreeLatitude") - Done
    rtl_0_realizedtemperature = Parameter(index=[region], unit="degreeC") - Done
  Scalars
    rlo_ratiolandocean = Parameter(unit="unitless") - Done
    pole_polardifference = Parameter(unit="degreeC") - Done
    lat_g_meanlatitude = Parameter(unit="degreeLatitude") - Done
    fslope_CO2forcingslope = Parameter(unit="W/m2") - Done
    tcr_transientresponse = Parameter(unit="degreeC") - Done
    frt_warminghalflife = Parameter(unit="year") - Done

co2cycle
  Arrays
    e_globalCO2emissions=Parameter(index=[time],unit="Mtonne/year") - From co2emissions
    rt_g0_baseglobaltemp=Parameter(index=[1],unit="degreeC") - From ClimateTemperature
    rt_g_globaltemperature=Parameter(index=[time],unit="degreeC") - From ClimateTemperature
  Scalars
    ce_0_basecumCO2emissions=Parameter(unit="Mtonne") - Done
    pic_preindustconcCO2=Parameter(unit="ppbv") - Done
    ccf_CO2feedback=Parameter(unit="%/degreeC") - Done
    ccfmax_maxCO2feedback=Parameter(unit="%") - Done
    res_CO2atmlifetime=Parameter(unit="year") - Done
    den_CO2density=Parameter(unit="Mtonne/ppbv") - Done
    c0_CO2concbaseyr=Parameter(unit="ppbv") - Done
    air_CO2fractioninatm=Parameter(unit="%") - Done

co2emissions
  Arrays
    e0_baselineCO2emissions=Parameter(index=[region],unit="Mtonne/year") - Done
    er_CO2emissionsgrowth=Parameter(index=[time,region],unit="%") - Done

co2forcing
  Arrays
    c_CO2concentration=Parameter(index=[time],unit="ppbv") - From co2cycle
  Scalars
    f0_CO2baseforcing=Parameter(unit="W/m2") - Done
    fslope_CO2forcingslope=Parameter(unit="W/m2") - Done
    c0_baseCO2conc=Parameter(unit="ppbv") - Done

lgcycle
  Arrays
    e_globalLGemissions=Parameter(index=[time],unit="Mtonne/year") - From lgemissions
    rtl_g_0_realizedtemp=Parameter(index=[1],unit="degreeC") - From ClimateTemperature
    rtl_g_landtemperature=Parameter(index=[time],unit="degreeC") - From ClimateTemperature
  Scalars
    air_LGfractioninatm=Parameter(unit="%") - Done
    res_LGatmlifetime=Parameter(unit="year") - Done
    den_LGdensity=Parameter(unit="Mtonne/ppbv") - Done
    stim_LGemissionfeedback=Parameter(unit="Mtonne/degreeC") - Done
    pic_preindustconcLG=Parameter(unit="ppbv") - Done
    c0_LGconcbaseyr=Parameter(unit="ppbv") - Done

lgemissions
  Arrays
    e0_baselineLGemissions=Parameter(index=[region],unit="Mtonne/year") - Done
    er_LGemissionsgrowth=Parameter(index=[time,region],unit="%") - Done

lgforcing
  Arrays
    c_LGconcentration=Parameter(index=[time],unit="ppbv") - From lgcycle
  Scalars
    c0_LGconcbaseyr=Parameter(unit="ppbv") - Done
    f0_LGforcingbase=Parameter(unit="W/m2") - Done
    fslope_LGforcingslope=Parameter(unit="W/m2") - Done

n2ocycle
  Arrays
    e_globalN2Oemissions=Parameter(index=[time],unit="Mtonne/year") - From n2oemissions
    rtl_g0_baselandtemp=Parameter(index=[1],unit="degreeC") - From ClimateTemperature
    rtl_g_landtemperature=Parameter(index=[time],unit="degreeC") - From ClimateTemperature
  Scalars
    pic_preindustconcN2O=Parameter(unit="ppbv") - Done
    c0_N2Oconcbaseyr=Parameter(unit="ppbv") - Done
    air_N2Ofractioninatm=Parameter(unit="%") - Done
    res_N2Oatmlifetime=Parameter(unit="year") - Done
    den_N2Odensity=Parameter(unit="Mtonne/ppbv") - Done
    stim_N2Oemissionfeedback=Parameter(unit="Mtonne/degreeC") - Done

n2oemissions
  Arrays
    e0_baselineN2Oemissions=Parameter(index=[region],unit="Mtonne/year") - Done
    er_N2Oemissionsgrowth=Parameter(index=[time,region],unit="%") - Done

n2oforcing
  Arrays
    c_N2Oconcentration=Parameter(index=[time],unit="ppbv") - From n2ocycle
    c_CH4concentration=Parameter(index=[time],unit="ppbv") - From ch4cycle
  Scalars
    f0_N2Obaseforcing=Parameter(unit="W/m2") - Done
    fslope_N2Oforcingslope=Parameter(unit="W/m2") - Done
    c0_baseN2Oconc=Parameter(unit="ppbv") - Done
    c0_baseCH4conc=Parameter(unit="ppbv") - Done

sealevelrise
  Arrays
    rt_g_globaltemperature = Parameter(index=[time], unit="degreeC") - From ClimateTemperature
  Scalars
   sltemp_SLtemprise=Parameter(unit = "m-degreeC") - Done
   sla_SLbaselinerise=Parameter(unit = "m") - Done
   sltau_SLresponsetime=Parameter(unit = "years") - Done
   s0_initialSL=Parameter(unit = "m") - Done

SulphateForcing
  Arrays
    se0_sulphateemissionsbase = Parameter(index=[region], unit="Mtonne/year") - Done
    pse_sulphatevsbase = Parameter(index=[time, region], unit="%") - Done
    nf_naturalsfx = Parameter(index=[region], unit="Tg/km^2/yr") - Done
  Scalars
    d_sulphateforcingbase = Parameter(unit="W/m2") - Done
    ind_slopeSEforcing_indirect = Parameter(unit="W/m2") - Done

TotalForcing
  Arrays
    f_CO2forcing = Parameter(index=[time], unit="W/m2") - From co2forcing
    f_CH4forcing = Parameter(index=[time], unit="W/m2") - From ch4forcing
    f_N2Oforcing = Parameter(index=[time], unit="W/m2") - From n2oforcing
    f_lineargasforcing = Parameter(index=[time], unit="W/m2") - From lgforcing
    exf_excessforcing = Parameter(index=[time], unit="W/m2") - Done
